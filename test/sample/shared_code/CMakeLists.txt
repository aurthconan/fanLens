INCLUDE_DIRECTORIES(${fanLens_SOURCE_DIR}/src)

AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_LIST_DIR} shared_codes)

SET(ENABLE_ASSIMP 0)
SET(ENABLE_LIB3DS 0)

IF(ENABLE_ASSIMP)
    SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -DENABLE_ASSIMP=1")
ENDIF()
IF(ENABLE_LIB3DS)
    SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -DENABLE_LIB3DS=1")
ENDIF()

ADD_LIBRARY(shared_codes STATIC ${shared_codes})

# add fanLens flags
IF(CMAKE_COMPILER_IS_GNUCXX)
    # gcc only compiler
    GET_TARGET_PROPERTY(fanLensFlags fanLens COMPILE_FLAGS)
    GET_TARGET_PROPERTY(fanLensFlagsRelease fanLens COMPILE_FLAGS_RELEASE)
    SET_TARGET_PROPERTIES(shared_codes PROPERTIES COMPILE_FLAGS ${fanLensFlags})
    SET_TARGET_PROPERTIES(shared_codes PROPERTIES COMPILE_FLAGS_RELEASE ${fanLensFlagsRelease})
ELSE()
    # not really can't support, but I do not have time to port
    MESSAGE(FATAL_ERROR "not supported compiler")
ENDIF()

